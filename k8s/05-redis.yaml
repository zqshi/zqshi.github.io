# Redis缓存集群配置
# Redis Cache Cluster Configuration

# Redis Master持久化存储
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-master-pvc
  namespace: digital-employee
  labels:
    app: redis
    component: master
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: fast-ssd

---
# Redis Replica持久化存储
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-replica-pvc
  namespace: digital-employee
  labels:
    app: redis
    component: replica
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: fast-ssd

---
# Redis Master Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-master
  namespace: digital-employee
  labels:
    app: redis
    component: master
    version: "7"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
      component: master
  template:
    metadata:
      labels:
        app: redis
        component: master
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9121"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: digital-employee-sa
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
        runAsNonRoot: true
      containers:
      # Redis主服务器
      - name: redis
        image: redis:7-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6379
          name: redis
          protocol: TCP
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: digital-employee-secrets
              key: REDIS_PASSWORD
              optional: true
        command:
        - redis-server
        - --appendonly
        - "yes"
        - --replica-read-only
        - "no"
        - --maxmemory
        - "512mb"
        - --maxmemory-policy
        - "allkeys-lru"
        - --save
        - "900 1"
        - --save
        - "300 10"
        - --save
        - "60 10000"
        - --rdbcompression
        - "yes"
        - --rdbchecksum
        - "yes"
        - --stop-writes-on-bgsave-error
        - "yes"
        - --tcp-keepalive
        - "300"
        - --timeout
        - "0"
        - --tcp-backlog
        - "511"
        volumeMounts:
        - name: redis-master-storage
          mountPath: /data
        - name: redis-config
          mountPath: /usr/local/etc/redis/redis.conf
          subPath: redis.conf
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
          
      # Redis Exporter for Prometheus监控
      - name: redis-exporter
        image: oliver006/redis_exporter:v1.54.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9121
          name: metrics
          protocol: TCP
        env:
        - name: REDIS_ADDR
          value: "redis://localhost:6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: digital-employee-secrets
              key: REDIS_PASSWORD
              optional: true
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
            
      volumes:
      - name: redis-master-storage
        persistentVolumeClaim:
          claimName: redis-master-pvc
      - name: redis-config
        configMap:
          name: redis-config

---
# Redis Replica Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-replica
  namespace: digital-employee
  labels:
    app: redis
    component: replica
    version: "7"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
      component: replica
  template:
    metadata:
      labels:
        app: redis
        component: replica
    spec:
      serviceAccountName: digital-employee-sa
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
        runAsNonRoot: true
      containers:
      - name: redis
        image: redis:7-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6379
          name: redis
          protocol: TCP
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: digital-employee-secrets
              key: REDIS_PASSWORD
              optional: true
        command:
        - redis-server
        - --replicaof
        - redis-master-svc
        - "6379"
        - --replica-read-only
        - "yes"
        - --maxmemory
        - "512mb"
        - --maxmemory-policy
        - "allkeys-lru"
        - --tcp-keepalive
        - "300"
        - --timeout
        - "0"
        volumeMounts:
        - name: redis-replica-storage
          mountPath: /data
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
          
      volumes:
      - name: redis-replica-storage
        persistentVolumeClaim:
          claimName: redis-replica-pvc

---
# Redis Master服务
apiVersion: v1
kind: Service
metadata:
  name: redis-master-svc
  namespace: digital-employee
  labels:
    app: redis
    component: master
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
    name: redis
  - port: 9121
    targetPort: 9121
    protocol: TCP
    name: metrics
  selector:
    app: redis
    component: master

---
# Redis Replica服务
apiVersion: v1
kind: Service
metadata:
  name: redis-replica-svc
  namespace: digital-employee
  labels:
    app: redis
    component: replica
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
    name: redis
  selector:
    app: redis
    component: replica

---
# Redis读写分离服务（写）
apiVersion: v1
kind: Service
metadata:
  name: redis-write-svc
  namespace: digital-employee
  labels:
    app: redis
    service-type: write
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
    name: redis
  selector:
    app: redis
    component: master

---
# Redis读写分离服务（读）
apiVersion: v1
kind: Service
metadata:
  name: redis-read-svc
  namespace: digital-employee
  labels:
    app: redis
    service-type: read
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
    name: redis
  selector:
    app: redis
    component: replica

---
# Redis Sentinel配置（用于高可用）
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-sentinel
  namespace: digital-employee
  labels:
    app: redis
    component: sentinel
spec:
  replicas: 3
  selector:
    matchLabels:
      app: redis
      component: sentinel
  template:
    metadata:
      labels:
        app: redis
        component: sentinel
    spec:
      serviceAccountName: digital-employee-sa
      containers:
      - name: sentinel
        image: redis:7-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 26379
          name: sentinel
          protocol: TCP
        command:
        - redis-sentinel
        - /etc/redis/sentinel.conf
        volumeMounts:
        - name: sentinel-config
          mountPath: /etc/redis/sentinel.conf
          subPath: sentinel.conf
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - -p
            - "26379"
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - redis-cli
            - -p
            - "26379"
            - ping
          initialDelaySeconds: 15
          periodSeconds: 5
      volumes:
      - name: sentinel-config
        configMap:
          name: redis-config

---
# Redis Sentinel服务
apiVersion: v1
kind: Service
metadata:
  name: redis-sentinel-svc
  namespace: digital-employee
  labels:
    app: redis
    component: sentinel
spec:
  type: ClusterIP
  ports:
  - port: 26379
    targetPort: 26379
    protocol: TCP
    name: sentinel
  selector:
    app: redis
    component: sentinel

---
# Redis配置
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: digital-employee
  labels:
    app: redis
    component: config
data:
  redis.conf: |
    # Redis 7 Production Configuration
    
    # Network
    bind 0.0.0.0
    port 6379
    tcp-backlog 511
    timeout 0
    tcp-keepalive 300
    
    # General
    daemonize no
    supervised no
    pidfile /var/run/redis.pid
    loglevel notice
    logfile ""
    databases 16
    
    # Snapshotting
    save 900 1
    save 300 10
    save 60 10000
    stop-writes-on-bgsave-error yes
    rdbcompression yes
    rdbchecksum yes
    dbfilename dump.rdb
    dir /data
    
    # Replication
    replica-serve-stale-data yes
    replica-read-only yes
    repl-diskless-sync no
    repl-diskless-sync-delay 5
    repl-ping-replica-period 10
    repl-timeout 60
    
    # Security
    # requirepass your_redis_password
    
    # Memory Management
    maxmemory 512mb
    maxmemory-policy allkeys-lru
    
    # Append Only File
    appendonly yes
    appendfilename "appendonly.aof"
    appendfsync everysec
    no-appendfsync-on-rewrite no
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb
    
    # Lua scripting
    lua-time-limit 5000
    
    # Slow log
    slowlog-log-slower-than 10000
    slowlog-max-len 128
    
    # Client output buffer limits
    client-output-buffer-limit normal 0 0 0
    client-output-buffer-limit replica 256mb 64mb 60
    client-output-buffer-limit pubsub 32mb 8mb 60
    
  sentinel.conf: |
    # Redis Sentinel Configuration
    
    port 26379
    dir /tmp
    
    # Monitor the master
    sentinel monitor mymaster redis-master-svc 6379 2
    sentinel down-after-milliseconds mymaster 30000
    sentinel parallel-syncs mymaster 1
    sentinel failover-timeout mymaster 180000
    
    # Security
    # sentinel auth-pass mymaster your_redis_password
    
    # Notification scripts
    # sentinel notification-script mymaster /var/redis/notify.sh
    # sentinel client-reconfig-script mymaster /var/redis/reconfig.sh